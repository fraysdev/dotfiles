import { createComputed, createState, With } from "ags";
import { readFile } from "ags/file";
import { execAsync } from "ags/process";
import { interval, timeout } from "ags/time";

function Color() {
  const [color, setColor] = createState("");

  const pickColor = () => {
    execAsync("hyprpicker").then((c) => {
      setColor(c);
      timeout(5000, () => setColor(""));
    });
  };

  const cssOption = createComputed([color], (c) =>
    [
      // `padding: 0 ${!!c ? "8px" : ""};`,
      `background-color: ${c || "transparent"};`,
      `color: ${!!c ? textColorByBackground(c) : "inherit"};`,
    ].join(" ")
  );

  cssOption.subscribe(() => console.log(cssOption.get()));

  return (
    <button css={cssOption} onClicked={pickColor}>
      <label label="󰈊" />
      {/* <box spacing={8}>
        <label label="󰈊" />
        <label visible={createComputed([color], (c) => !!c)} label={color} />
      </box> */}
    </button>
  );
}

/**
 * Determines whether to use black or white text based on the background color's brightness.
 * The code is generated by AI as "Implementing the WCAG Formula", though need to verify.
 * @param color A background color
 * @returns Color for text. Either black (#1E1E2E) or white (#FFFFFF)
 */
function textColorByBackground(color: string) {
  const pureHexColor = color.slice(1);
  const r = parseInt(pureHexColor.substring(0, 2), 16);
  const g = parseInt(pureHexColor.substring(2, 4), 16);
  const b = parseInt(pureHexColor.substring(4, 6), 16);

  const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;
  return luminance > 0.5 ? "#1E1E2E" : "#FFFFFF";
}

export default Color;
